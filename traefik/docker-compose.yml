services:

  # ------------------------------------------------------
  # traefik
  # ------------------------------------------------------

  traefik:
    image: traefik:latest
    container_name: traefik
    restart: unless-stopped
    command:
      #- "--log.level=DEBUG"
      #- "--api.dashboard=true"
      #- "--api.debug=true"
      #- "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=${ADMIN_CONTACT_LETSENCRYPT}"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    #labels:
    #  traefik.enable: "true"
    #  #traefik.http.routers.api.entrypoints: "web"
    #  traefik.http.routers.api.entrypoints: "websecure"
    #  traefik.http.routers.api.tls.certresolver: "myresolver"
    #  traefik.http.routers.api.rule: "Host(`traefik.${BASE_URL}`)"
    #  traefik.http.routers.api.service: "api@internal"
    ports:
      - "80:80"
      #- "8080:8080"
      - "443:443"
      #- "8443:8443"
    volumes:
      - ./data/letsencrypt:/letsencrypt:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro

# ------------------------------------------------------
# networks
# ------------------------------------------------------

networks:
  default:
    name: overlay
    driver: overlay
    external: true

# ------------------------------------------------------
# volumes (example)
# ------------------------------------------------------

#volumes:
#  traefik_data:
#    driver: local
