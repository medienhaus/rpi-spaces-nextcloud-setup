# see: https://nginx.org/en/docs/http/ngx_http_upstream_module.html
#
upstream nextcloud-app {
  # the hostname here must match the docker container name;
  # in our case it it `nextcloud-app`, and we name the upstream
  # hostname used above and in `proxy_pass ...` simply the same
  #
  server nextcloud-app:80;
}

server {
  listen 80;
  server_name nextcloud.example.org;

  # see: https://www.freecodecamp.org/news/docker-nginx-letsencrypt-easy-secure-reverse-proxy-40165ba3aee2/
  #
  add_header Strict-Transport-Security    "max-age=31536000; includeSubDomains" always;
  add_header X-Frame-Options              SAMEORIGIN;
  add_header X-Content-Type-Options       nosniff;
  add_header X-XSS-Protection             "1; mode=block";

  location / {
    # see: https://nginx.org/en/docs/http/ngx_http_upstream_module.html
    #
    proxy_pass http://nextcloud-app;

    # see: https://www.freecodecamp.org/news/docker-nginx-letsencrypt-easy-secure-reverse-proxy-40165ba3aee2/
    #
    proxy_set_header    X-Real-IP           $remote_addr;
    proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
    proxy_set_header    X-Forwarded-Proto   $scheme;
    proxy_set_header    Host                $host;
    proxy_set_header    X-Forwarded-Host    $host;
    proxy_set_header    X-Forwarded-Port    $server_port;
  }

  # see: https://docs.nextcloud.com/server/30/admin_manual/configuration_server/reverse_proxy_configuration.html#nginx
  #
  #location /.well-known/carddav {
  #  return 301 $scheme://$host/remote.php/dav;
  #}
  #
  #location /.well-known/caldav {
  #  return 301 $scheme://$host/remote.php/dav;
  #}
}
